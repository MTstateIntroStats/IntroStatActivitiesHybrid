fig.show = "hold",
message = FALSE
)
options(show.signif.stars = FALSE)
suppressMessages(library(knitr))
suppressMessages(library(tidyverse))
suppressMessages(library(readr))
suppressMessages(library(catstats))
suppressMessages(library(mosaic))
colorize <- function(x, color="red") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
moon <- read.csv("data/Moon_VR.csv")
moon <- read.csv("https://math.montana.edu/courses/s216/data/VR_Moon.csv")
moon %>%  # Data set piped into...
ggplot(aes(y = TestScore, x = Method))+  # Identify variables
geom_boxplot()+  # Tell it to make a box plot
labs(title = "Boxplots of Test Scores for Undergraduate Students Comparing VR
Teaching Methods and Traditional Teaching Methods",  # Title
x = "Methods",    # x-axis label
y = "Test Score (points)")  # y-axis label
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE,
message = FALSE,
#cache = TRUE,
echo = FALSE, # hide code unless otherwise noted in chunk options
out.width = "70%",
fig.align = 'center',
fig.width = 6,
fig.asp = 0.618,  # 1 / phi
fig.show = "hold",
message = FALSE
)
options(show.signif.stars = FALSE)
suppressMessages(library(knitr))
suppressMessages(library(tidyverse))
suppressMessages(library(readr))
suppressMessages(library(catstats))
suppressMessages(library(mosaic))
colorize <- function(x, color="red") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
moon <- read.csv("https://math.montana.edu/courses/s216/data/VR_Moon.csv")
moon %>%  # Data set piped into...
ggplot(aes(y = TestScore, x = Method))+  # Identify variables
geom_boxplot()+  # Tell it to make a box plot
labs(title = "Boxplots of Test Scores for Undergraduate Students Comparing VR
Teaching Methods and Traditional Teaching Methods",  # Title
x = "Methods",    # x-axis label
y = "Test Score (points)")  # y-axis label
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(tidyverse)
#if working locally and not on the server version:
#remotes::install_github("greenwood-stat/catstats")
library(catstats)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
# Install and loads the pacman package which contains the p_load function
if (!require("pacman", character.only = TRUE)) {
install.packages("pacman")
}
library(pacman)
# Use p_load to check for, install (if necessary), and load packages
p_load(readr)
# p_load should (if needed) install and load the readr package if you have issues with it, just comment it out and un-comment the lines below
#install.packages("readr")
#library(readr)
library(tidyverse)
library(mosaic)
# Read the data
load_data <- read_csv("CleanData2.csv")
# Filter out the desktop samples
VR_data <- load_data %>%
filter(demo != "Desktop")
# Rename the variables
VR_data <- VR_data %>% select(`PreScore (13)`,`PostScore (13)`, `PrePostDifference (13)`,demo) %>%
rename(
Method = demo,
TestScore = `PostScore (13)`,
PreScore = `PreScore (13)`,
PrePostDiff = `PrePostDifference (13)`
)
write.csv(VR_data, file = "/Repositories/IntroStatActivitieHybrid/data/VR_Moon.csv"
write.csv(VR_data, file = "/Repositories/IntroStatActivitieHybrid/data/VR_Moon.csv")
write.csv(VR_data, file = "C:Users/Melinda Yager/OneDrive - Montana State University/Repositories/IntroStatActivitieHybrid/data/VR_Moon.csv")
write.csv(VR_data, file = "C:/Users/Melinda Yager/OneDrive - Montana State University/Repositories/IntroStatActivitieHybrid/data/VR_Moon.csv")
write.csv(VR_data, file = "c:/Users/Melinda Yager/OneDrive - Montana State University/Repositories/IntroStatActivitieHybrid/data/VR_Moon.csv")
setwd("C:/Users/Melinda Yager/OneDrive - Montana State University/Repositories/IntroStatActivitiesSolutions")
setwd("C:/Users/Melinda Yager/OneDrive - Montana State University/Repositories/IntroStatActivitiesHybrid")
write.csv(VR_data, file = "data/VR_Moon.csv")
moon <- read.csv("https://math.montana.edu/courses/s216/data/VR_Moon.csv")
moon %>%  # Data set piped into...
ggplot(aes(y = TestScore, x = Method))+  # Identify variables
geom_boxplot()+  # Tell it to make a box plot
labs(title = "Boxplots of Test Scores for Undergraduate Students Comparing VR
Teaching Methods and Traditional Teaching Methods",  # Title
x = "Methods",    # x-axis label
y = "Test Score (points)")  # y-axis label
moon %>%
reframe(favstats(TestScore~Method))
qt(0.975, df = 55, lower.tail=TRUE)
2*pt(0.613, df=55, lower.tail=FALSE)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE,
message = FALSE,
#cache = TRUE,
echo = FALSE, # hide code unless otherwise noted in chunk options
out.width = "70%",
fig.align = 'center',
fig.width = 6,
fig.asp = 0.618,  # 1 / phi
fig.show = "hold",
message = FALSE
)
options(show.signif.stars = FALSE)
suppressMessages(library(knitr))
suppressMessages(library(tidyverse))
suppressMessages(library(readr))
suppressMessages(library(catstats))
suppressMessages(library(mosaic))
colorize <- function(x, color="red") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
two_mean_test(femur~rugosity, #Enter the names of the variables
data = dinos,  # Enter the name of the dataset
first_in_subtraction = "Present", # First outcome in order of subtraction
number_repetitions = 1000,  # Number of simulations
as_extreme_as = 74.083,  # Observed statistic
direction = "greater")  # Direction of alternative: "greater", "less", or "two-sided"
dinos <- read.csv("https://math.montana.edu/courses/s216/data/dinosaur.csv")
dinos %>%
ggplot(aes(y = femur, x = rugosity)) +
geom_boxplot() +
labs(title = "Side-by-side box plots of femur length by rugosity",
x = "Rugose structures on the backbone",
y = "Femur length (cm)")
two_mean_test(femur~rugosity, #Enter the names of the variables
data = dinos,  # Enter the name of the dataset
first_in_subtraction = "Present", # First outcome in order of subtraction
number_repetitions = 1000,  # Number of simulations
as_extreme_as = 74.083,  # Observed statistic
direction = "greater")  # Direction of alternative: "greater", "less", or "two-sided"
set.seed(216)
two_mean_bootstrap_CI(femur~rugosity, #Enter the name of the variables
data = dinos,  # Enter the name of the data set
first_in_subtraction = "Present", # First value in order of subtraction
number_repetitions = 1000,  # Number of simulations
confidence_level = 0.98)
trust <- read.csv("https://math.montana.edu/courses/s216/data/Trustworthiness.csv")
trust %>%  # Data set piped into...
ggplot(aes(y = Trustworthiness_Video, x = Creator_SME))+  # Identify variables
geom_boxplot()+  # Tell it to make a box plot
labs(title = "Boxplots of YouTuber's Trustworthiness Score between subject matter experts (SME) YouTubers and non-SME YouTubers (SME - non-SME)",  # Title
x = "Whether the Creator is SME",    # x-axis label
y = "Trustworthiness Score (points)")  # y-axis label
trust %>%
reframe(favstats(Trustworthiness_Video~Creator_SME))
2*pt(-1.506, df=620, lower.tail=FALSE)
2*pt(-1.506, df=620, lower.tail=FALSE)
2*pt(-1.506, df=620, lower.tail=TRUE)
2*pt(-1.506, df=620, lower.tail=TRUE)
qt(0.975, df = 620, lower.tail=TRUE)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
include = TRUE,
eval= TRUE
)
options(show.signif.stars = FALSE) #suppresses significance stars in output
library(readr)
brain<-read_table2("http://bcs.whfreeman.com/WebPub/Statistics/shared_resources/EESEE/BrainSize/Data_Files/BRAINSZE.TXT")
brain2<-brain[-which(brain$Weight=="."|brain$Height=="."),] #removes missing observations
library(psych)
pairs.panels(brain2,smooth=FALSE,ellipses=FALSE,digits=4)
#delete
library(car)
scatterplot(PIQ~MRICount,data=brain2,smooth=FALSE)
library(mosaic)
set.seed(12345)
B<-?
sim.slope<-matrix(NA,nrow=B)
for(b in 1:B){
sim.slope[b]<-lm(?~shuffle(?),data=brain2)$coef[2]
library(mosaic)
set.seed(12345)
B<-10000
sim.slope<-matrix(NA,nrow=B)
for(b in 1:B){
sim.slope[b]<-lm(PIQ~shuffle(MRICount),data=brain2)$coef[2]
}
hist(sim.slope,main="Estimated Permutation Distribution",xlab="Permuted Slopes")
#delete
library(mosaic)
pdata(abs(sim.slope),1.176e-04,lower.tail=FALSE)
#delete
library(mosaic)
pdata(abs(sim.slope),1.176*e^-04,lower.tail=FALSE)
#delete
library(mosaic)
pdata(abs(sim.slope),1.176*10^-04,lower.tail=FALSE)
# Read in data set
rude <- read.csv("https://math.montana.edu/courses/s216/data/rude.csv")
# Side-by-side box plots
rude %>%
ggplot(aes(x = condition, y = number_of_uses)) +
geom_boxplot() +
labs(title = "Number of Uses for a Brick based on Behavior Condition
for College Students in a Management Course",
x = "Behavior")
library(tidyverse)
library(catstats)
library(mosaic)
# Read in data set
rude <- read.csv("https://math.montana.edu/courses/s216/data/rude.csv")
# Side-by-side box plots
rude %>%
ggplot(aes(x = condition, y = number_of_uses)) +
geom_boxplot() +
labs(title = "Number of Uses for a Brick based on Behavior Condition
for College Students in a Management Course",
x = "Behavior")
glycemic <- read.csv("datasetname.csv")
remotes::install_github("greenwood-stat/catstats")
remotes::install_github("greenwood-stat/catstats")
library(catstats)
install.packages("xfun")
# Read in data set
rude <- read.csv("https://math.montana.edu/courses/s216/data/rude.csv")
# Side-by-side box plots
rude %>%
ggplot(aes(x = condition, y = number_of_uses)) +
geom_boxplot() +
labs(title = "Number of Uses for a Brick based on Behavior Condition
for College Students in a Management Course",
x = "Behavior")
library(tidyverse)
# Side-by-side box plots
rude %>%
ggplot(aes(x = condition, y = number_of_uses)) +
geom_boxplot() +
labs(title = "Number of Uses for a Brick based on Behavior Condition
for College Students in a Management Course",
x = "Behavior")
set.seed(216)
two_mean_test(number_of_uses~condition, #Enter the names of the variables
data = rude,  # Enter the name of the dataset
first_in_subtraction = "rudeness", # First outcome in order of subtraction
number_repetitions = 1000,  # Number of simulations
as_extreme_as = -3.3,  # Observed statistic
direction = "less")  # Direction of alternative: "greater", "less", or "two-sided"
knitr::opts_chunk$set(echo = TRUE)
library(catstats)
set.seed(117)
x <- rnorm(25)
m <- mean(x)
one_mean_CI(x,
summary_measure = "mean",
number_repetitions = 100,
confidence_level = 0.95)
remotes::install_github("greenwood-stat/catstats")
remotes::install_github("greenwood-stat/catstats")
knitr::opts_chunk$set(echo = TRUE)
library(catstats)
one_proportion_bootstrap_CI(sample_size = 150, number_successes = 98, number_repetitions = 100,
confidence_level = 0.99)
set.seed(117)
x <- rnorm(25)
m <- mean(x)
one_mean_CI(x,
summary_measure = "mean",
number_repetitions = 100,
confidence_level = 0.95)
set.seed(117)
x <- rnorm(25)
m <- mean(x)
one_mean_test(x,
summary_measure = "mean",
shift = -m,
as_extreme_as = m,
direction = "two-sided",
number_repetitions = 100,
add_normal = FALSE)
set.seed(117)
x <- rnorm(25)
m <- mean(x)
one_mean_test(x,
summary_measure = "mean",
shift = -m,
as_extreme_as = m,
direction = "two-sided",
number_repetitions = 100,
add_normal = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(catstats)
one_proportion_test(probability_success = 0.5,
sample_size = 150,
number_repetitions = 100,
as_extreme_as = 0.65,
direction = "greater",
summary_measure = "proportion",
add_normal = TRUE)
set.seed(117)
x <- rnorm(25)
y <- x + 1 + rnorm(25, 0, .3)
data <- data.frame(x,y)
obs_diff <- mean(x - y)
paired_test(data, shift = -obs_diff,
direction = "two-sided",
as_extreme_as = obs_diff,
number_repetitions = 100,
which_first = 1,
add_normal = TRUE, summary_measure = "mean")
data(mtfires)
mtfires$logHect  <- log(mtfires$Hectares)
regression_bootstrap_CI(logHect~Temperature, data = mtfires, summary_measure = "correlation",
confidence_level = 0.9, number_repetitions = 1000)
data(pt)
two_mean_bootstrap_CI(responses~brand, data = pt, first_in_subtraction = "B1",
number_repetitions = 100, confidence_level = 0.98,
summary_measure = "median")
data(pt)
two_mean_test(responses~brand, data = pt, first_in_subtraction = "B1",
number_repetitions = 100, as_extreme_as = -.4, direction = "two-sided",
summary_measure = "mean")
data(pt)
pt$twoSeconds <- ifelse(pt$responses >=2, "Yes", "No")
two_proportion_test(twoSeconds~brand, data = pt,
first_in_subtraction = "B1",
response_value_numerator = "Yes",
number_repetitions = 100,
as_extreme_as = -.4,
direction = "two-sided",
add_normal = TRUE)
data(pt)
pt$twoSeconds <- ifelse(pt$responses >=2, "Yes", "No")
two_proportion_bootstrap_CI(twoSeconds~brand, data = pt, first_in_subtraction = "B1",
response_value_numerator = "Yes", number_repetitions = 100, confidence_level = 0.95)
remotes::install_github("greenwood-stat/catstats")
remotes::install_github("greenwood-stat/catstats")
#Mosaic plot
library(tidyverse)
library(ggplot2)
library(catstats)
#Read in data set
good <- read.csv("https://math.montana.edu/courses/s216/data/goodsam.csv")
good %>% group_by(Condition) %>% count(Behavior)
#Create a segmented bar plot
good %>% # Data set piped into...
ggplot(aes(x = Condition, fill = Behavior)) +   # This specifies the variables
geom_bar(stat = "count", position = "fill") +  # Tell it to make a stacked bar plot
labs(title = "Segmented Bar Plot of Princeton Seminary Students that Help the \n actor between those that were in a Hurry and those that were Not in a Hurry",
# Make sure to title your plot
x = "Level of Light",   # Label the x axis
y = "")  + # Remove y axis label
scale_fill_viridis_d()  # Make figure color
#Create a segmented bar plot
good %>% # Data set piped into...
ggplot(aes(x = Condition, fill = Behavior)) +   # This specifies the variables
geom_bar(stat = "count", position = "fill") +  # Tell it to make a stacked bar plot
labs(title = "Segmented Bar Plot of Princeton Seminary Students that Help the \nactor between those that were in a Hurry and those that were Not in a Hurry",
# Make sure to title your plot
x = "Level of Light",   # Label the x axis
y = "")  + # Remove y axis label
scale_fill_viridis_d()  # Make figure color
#Create a segmented bar plot
good %>% # Data set piped into...
ggplot(aes(x = Condition, fill = Behavior)) +   # This specifies the variables
geom_bar(stat = "count", position = "fill") +  # Tell it to make a stacked bar plot
labs(title = "Segmented Bar Plot of Princeton Seminary Students that Help the actor\n between those that were in a Hurry and those that were Not in a Hurry",
# Make sure to title your plot
x = "Level of Light",   # Label the x axis
y = "")  + # Remove y axis label
scale_fill_viridis_d()  # Make figure color
#Create a segmented bar plot
good %>% # Data set piped into...
ggplot(aes(x = Condition, fill = Behavior)) +   # This specifies the variables
geom_bar(stat = "count", position = "fill") +  # Tell it to make a stacked bar plot
labs(title = "Segmented Bar Plot of Princeton Seminary Students that Help the actor \nbetween those that were in a Hurry and those that were Not in a Hurry",
# Make sure to title your plot
x = "Level of Light",   # Label the x axis
y = "")  + # Remove y axis label
scale_fill_viridis_d()  # Make figure color
library(tidyverse)
library(ggplot2)
#Highlight and run lines 1 - 13 to read in data set
skiers <- read.csv("https://math.montana.edu/courses/s216/data/HeadInjuries.csv")
skiers %>% # Data set piped into...
ggplot(aes(x = Helmet, fill = Outcome)) +   # This specifies the variables
geom_bar(stat = "count", position = "fill") +  # Tell it to make a stacked bar plot
labs(title = "Segmented Bar Plot of Head Injuries for Skiers/Snowboarders
Involved in Injuries between Helmet Use",  # Make sure to title your plot
x = "Helmet Use",   # Label the x axis
y = "") +  # Remove y axis label
scale_fill_viridis_d()  # Make figure color
par(mfrow=c(1,2))
depression <- read.csv("data/Exam_2_Prompt_6.csv")
par(mfrow=c(1,2))
depression <- read.csv("depression.csv")
depression %>%
ggplot(aes(x = drug, fill = score)) +
geom_bar(stat = "count", position = "fill") +
labs(title = "Segmented Bar Plot of Type of Drug by CGI-I Score for People with MDD",
y = "Relative Frequency",
x = "Drug",
fill = "Score") +
scale_fill_grey()
library(mosaic)
library(tidyverse)
library(ggplot2)
par(mfrow=c(1,2))
depression <- read.csv("depression.csv")
depression %>%
ggplot(aes(x = drug, fill = score)) +
geom_bar(stat = "count", position = "fill") +
labs(title = "Segmented Bar Plot of Type of Drug by CGI-I Score for People with MDD",
y = "Relative Frequency",
x = "Drug",
fill = "Score") +
scale_fill_grey()
depression %>% # Data set piped into...
ggplot() +   # This specifies the variables
geom_mosaic(aes(x=product(drug), fill = score)) +  # Tell it to make a mosaic plot
labs(title = "Mosaic Plot of of Type of Drug by CGI-I Score for People with MDD",  # Make sure to title your plot
x = "Drug",   # Label the x axis
y = "") +  # Remove y axis label
scale_fill_grey(guide = guide_legend(reverse = TRUE))  # Make figure color
library(mosaic)
library(ggmosaic)
par(mfrow=c(1,2))
depression <- read.csv("depression.csv")
depression %>%
ggplot(aes(x = drug, fill = score)) +
geom_bar(stat = "count", position = "fill") +
labs(title = "Segmented Bar Plot of Type of Drug by CGI-I Score for People with MDD",
y = "Relative Frequency",
x = "Drug",
fill = "Score") +
scale_fill_grey()
depression %>% # Data set piped into...
ggplot() +   # This specifies the variables
geom_mosaic(aes(x=product(drug), fill = score)) +  # Tell it to make a mosaic plot
labs(title = "Mosaic Plot of of Type of Drug by CGI-I Score for People with MDD",  # Make sure to title your plot
x = "Drug",   # Label the x axis
y = "") +  # Remove y axis label
scale_fill_grey(guide = guide_legend(reverse = TRUE))  # Make figure color
#For question 9
#Enter the value of Z from question 7 at xx in line 118
#Highlight and run lines 18 - 20
pnorm(-2.867, # Enter value of standardized statistic
m=0, s=1, # Using the standard normal mean = 0, sd = 1
lower.tail=TRUE) # Gives a p-value less than the standardized statistic
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE,
message = FALSE,
#cache = TRUE,
echo = FALSE, # hide code unless otherwise noted in chunk options
out.width = "70%",
fig.align = 'center',
fig.width = 6,
fig.asp = 0.618,  # 1 / phi
fig.show = "hold",
message = FALSE
)
options(show.signif.stars = FALSE)
suppressMessages(library(knitr))
suppressMessages(library(tidyverse))
suppressMessages(library(mosaic))
suppressMessages(library(car))
suppressMessages(library(readr))
suppressMessages(library(kableExtra))
suppressMessages(library(catstats))
colorize <- function(x, color="red") {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
glycemic <- read.csv("https://math.montana.edu/courses/s216/data/diabetes.csv")
glycemic %>% group_by(treatment) %>% count(outcome)
set.seed(216)
two_proportion_bootstrap_CI(formula = outcome~treatment,
data=glycemic, # Name of data set
first_in_subtraction = "rosi", # Order of subtraction: enter the name of Group 1
response_value_numerator = "success", # Define which outcome is a success
number_repetitions = 10000, # Always use a minimum of 10000 repetitions
confidence_level = 0.90) # Enter the level of confidence as a decimal
qnorm(0.95, lower.tail = TRUE) # Multiplier for 90% confidence interval
glycemic <- read.csv("https://math.montana.edu/courses/s216/data/diabetes.csv")
glycemic %>% group_by(treatment) %>% count(outcome)
View(glycemic)
